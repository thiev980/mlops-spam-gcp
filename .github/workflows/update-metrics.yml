name: Update metrics.json (daily)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "5 3 * * *"   # 03:05 UTC

permissions:
  contents: write

concurrency:
  group: pages-metrics
  cancel-in-progress: false

jobs:
  refresh:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install ssh client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Setup SSH key & known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ secrets.VM_HOST }}" >> ~/.ssh/known_hosts

      - name: Run export on VM and copy metrics.json
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
        run: |
          set -euo pipefail
          echo "[LOCAL] Connecting to VM..."
          ssh -i ~/.ssh/id_ed25519 "${VM_USER}@${VM_HOST}" bash -lc '
            set -euo pipefail
            cd ~/mlops-spam-gcp
            echo "[VM] Reset to clean main..."
            git fetch origin main || true
            git reset --hard origin/main
            git clean -fd
            export METRICS_PG_DSN="postgresql://airflow:airflow@127.0.0.1:5432/airflow_prod"
            [ -f .venv/bin/activate ] && . .venv/bin/activate
            python3 tools/export_metrics_for_pages.py
            echo "[VM] Export done:"
            ls -lh docs/metrics.json
          '
          echo "[LOCAL] Copy metrics.json from VM..."
          scp -i ~/.ssh/id_ed25519 "${VM_USER}@${VM_HOST}:~/mlops-spam-gcp/docs/metrics.json" ./metrics.json

      - name: Commit & push metrics.json to gh-pages
        run: |
          set -euo pipefail
          echo "[GHA] Switching to gh-pages branch..."
          git fetch origin gh-pages || true

          # Wenn metrics.json im Weg ist, weg damit
          rm -f metrics.json || true

          # Jetzt gewaltsam den Branch wechseln (ohne Fehlermeldung)
          git checkout -B gh-pages origin/gh-pages || git checkout -b gh-pages

          # metrics.json aus dem vorherigen Schritt hierher verschieben
          cp ../metrics.json ./metrics.json 2>/dev/null || mv -f ./metrics.json ./metrics.json

          echo "[GHA] Preparing commit..."
          if ! git diff --quiet -- metrics.json; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add metrics.json
            git commit -m "metrics: daily auto-update"
            git push -u origin gh-pages
            echo "[GHA] âœ… Updated gh-pages branch."
          else
            echo "[GHA] No changes in metrics.json"
          fi

          git checkout main || true
